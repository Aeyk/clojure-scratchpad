{"version":3,"sources":["quil/middlewares/deprecated_options.cljc"],"mappings":";AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAeA;AAKf,AAAA,AAAOC,AAAuBC;AAA9B,AACE,AAAMA,AAAS,AAACC,AAAID;AAApB,AACE,AAAM,AAAA,AAAA,AAACA,AAAAA,AAAAA;AAAP,AACE,AAAA,AAAA,AAACE;;AADH;;AAGA,AAAA,AAACC,AAAKH;;AAEV;;;;AAAA,AAAMI,AAGHC;AAHH,AAIE,AAAMA,AAAQ,AAAA,AAAA,AAACC,AAAUD,AAAoBN;AAA7C,AACO,AAAAQ,AAAA,AAAAC,AAKA,AAAC8B,AAAOC,AACR,AAAA,AAACC;AAND,AAAA,AAAA/B,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AAk7E0C,AAAA4B,AAAAjC;AAl7E1CM,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAAK,AAAA,AAAAC,AAAAP,AAAAK;AAAA,AAAAG,AAAAF,AAAA,AAAA,AAAOY;AAAP,AAAAV,AAAAF,AAAA,AAAA,AAAYa;AAAZ,AAAA,AAAA,AAAAV,AAAAN,AACE,AAAAiB,AAA2B,AAACnC,AAAAA,AAAAA,AAAWiC,AAAAA;AAAvC,AAAA,AAAAE;AAAA,AAAAC,AAAAD;AAAA,AAAAZ,AAAAa,AAAA,AAAA,AAAUE;AAAV,AAAAf,AAAAa,AAAA,AAAA,AAAkBG;AAAlB,AACE,AAAI,AAAA,AAAA,AAACnC,AAAQ6B,AAAkCK,AAAYC;;AAA3D;;AADF,AAGGN,AAAKC;;;;AAJV,AAAA,AAAAd,AAAA;;;;AAAA;;;;;AAAA,AAAAK,AAAA,AAAAC,AAAAR,AAAA,AAAAS,AAAA,AAAAC,AAAAlB;;AAAA,AAAAe,AAAA,AAAAC,AAAAR,AAAA;;;AAAA,AAAAW,AAAA,AAAAC,AAAApB;AAAA,AAAAa,AAAAM,AAAA,AAAA,AAAOI;AAAP,AAAAV,AAAAM,AAAA,AAAA,AAAYK;AAAZ,AAAA,AAAAH,AACE,AAAAI,AAA2B,AAACnC,AAAAA,AAAAA,AAAWiC,AAAAA;AAAvC,AAAA,AAAAE;AAAA,AAAAE,AAAAF;AAAA,AAAAZ,AAAAc,AAAA,AAAA,AAAUC;AAAV,AAAAf,AAAAc,AAAA,AAAA,AAAkBE;AAAlB,AACE,AAAI,AAAA,AAAA,AAACnC,AAAQ6B,AAAkCK,AAAYC;;AAA3D;;AADF,AAGGN,AAAKC;;AAJV,AAAAP,AAAA,AAAAK,AAAAtB;;;AAAA;;;;AAAA,AAAA;;AAAA,AAAA,AAAAD,AAAmBF","names":["quil.middlewares.deprecated-options/deprecated","quil.middlewares.deprecated-options/check-features-vector","features","cljs.core/set","cljs.core.println","cljs.core.disj","quil.middlewares.deprecated-options/deprecated-options","options","cljs.core.update_in","iter__4529__auto__","s__43920","cljs.core/LazySeq","temp__5743__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__43922","cljs.core/chunk-buffer","i__43921","vec__43924","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__43919","cljs.core/chunk-rest","vec__43930","cljs.core/first","cljs.core/cons","cljs.core/rest","name","value","temp__5741__auto__","vec__43927","vec__43933","version","message","cljs.core.remove","cljs.core/nil?","cljs.core.into","cljs.core/chunk-first"],"sourcesContent":["(ns quil.middlewares.deprecated-options)\n\n(def ^:private deprecated\n  {:decor [\"2.0\" \"Try :features [:present] for similar effect\"]\n   :target [\"2.0\" \"Use :features [:keep-on-top] instead.\"]\n   :safe-draw-fn [\"2.0\" \"Use :features [:no-safe-fns] instead.\"]})\n\n(defn- check-features-vector [features]\n  (let [features (set features)]\n    (when (features :no-safe-draw)\n      (println \"Feature :no-safe-draw was renamed to :no-safe-fns in Quil 2.1.\"\n               \"Use :feature [:no-safe-fns] now.\"))\n    (disj features :no-safe-draw)))\n\n(defn deprecated-options\n  \"Checks `options` map for deprecated options, removes them and\n  prints messages explaining how to fix them.\"\n  [options]\n  (let [options (update-in options [:features] check-features-vector)]\n    (->> (for [[name value] options]\n           (if-let [[version message] (deprecated name)]\n             (do (println name \"option was removed in Quil\" version \".\" message)\n                 nil)\n             [name value]))\n         (remove nil?)\n         (into {}))))\n"]}