# =======================
# Shiro INI configuration
# =======================

[main]
# Objects and their properties are defined here,
# Such as the securityManager, Realms and anything
# else needed to build the SecurityManager
shiro.loginUrl = /v1/api/users/login
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService

allowAll = org.apache.shiro.authc.credential.AllowAllCredentialsMatcher
simpleCredentialsMatcher = org.apache.shiro.authc.credential.SimpleCredentialsMatcher

# jndiObjectFactory = org.apache.shiro.jndi.JndiObjectFactory
# jndiObjectFactory.resourceName = jdbc/UserDB
# jndiObjectFactory.requiredType = javax.sql.DataSource
# jndiObjectFactory.resourceRef = true

realm = org.apache.shiro.realm.jdbc.JdbcRealm
realm.permissionsLookupEnabled = false
realm.credentialsMatcher = $passwordMatcher
# Note factories are automatically invoked via getInstance(),
#   see org.apache.shiro.authc.config.ReflectionBuilder::resolveReference
# realm.dataSource = org.postgresql.ds.PGSimpleDataSource
# realm.dataSource = $jndiObjectFactory

securityManager.realms = $realm


# We need to set the cipherKey, if you want the rememberMe cookie to work after restarting or on multiple nodes.
# YOU MUST SET THIS TO A UNIQUE STRING
# securityManager.rememberMeManager.cipherKey = kPH+bIxk5D2deZiIxcaaaA==

[users]
# format: username = password, role1, role2, ..., roleN
# The 'users' section is for simple deployments
# when you only need a small number of statically-defined
# set of User accounts.
root = secret,admin
guest = guest,guest



[roles]
# The 'roles' section is for simple deployments
# when you only need a small number of statically-defined
# roles.
admin = *


[urls]
# The 'urls' section is used for url-based security
# in web applications.  We'll discuss this section in the
# Web documentation
/v1/api/users/login = authc
/v1/api/users/logout = logout
/v1/api/users/** = authcQ